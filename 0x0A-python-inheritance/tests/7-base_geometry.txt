>>> BaseGeometry = __import__("7-base_geometry").BaseGeometry

'string and int'
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)

'area()'
>>> bg = BaseGeometry()
>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

'integer_validator()'
>>> bg = BaseGeometry()
>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

'integer_validator("age", 0)'
>>> bg = BaseGeometry()
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
...
ValueError: age must be greater than 0

'integer_validator("age", -4)'
>>> bg = BaseGeometry()
>>> bg.integer_validator("age", -4)
Traceback (most recent call last):
...
ValueError: age must be greater than 0

'integer_validator("age", “4”)'
>>> bg = BaseGeometry()
>>> bg.integer_validator("age", "4")
Traceback (most recent call last):
...
TypeError: age must be an integer

'integer_validator("age", (4,))'
>>> bg = BaseGeometry()
>>> bg.integer_validator("age", (4,))
Traceback (most recent call last):
...
TypeError: age must be an integer

'integer_validator("age", [3])'
>>> bg = BaseGeometry()
>>> bg.integer_validator("age", [3])
Traceback (most recent call last):
...
TypeError: age must be an integer

'integer_validator("age", True)'
>>> bg = BaseGeometry()
>>> bg.integer_validator("age", True)
Traceback (most recent call last):
...
TypeError: age must be an integer

'integer_validator("age", {3, 4})'
>>> bg = BaseGeometry()
>>> bg.integer_validator("age", {3, 4})
Traceback (most recent call last):
...
TypeError: age must be an integer

'integer_validator("age", None)'
>>> bg = BaseGeometry()
>>> bg.integer_validator("age", None)
Traceback (most recent call last):
...
TypeError: age must be an integer
